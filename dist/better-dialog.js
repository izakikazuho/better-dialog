"use strict";var c=Object.defineProperty;var h=(e,t,s)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s;var n=(e,t,s)=>h(e,typeof t!="symbol"?t+"":t,s);/*!
 * better-dialog
 * (c) 2025 izakikazuho
 * Released under the MIT License.
 */Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});class a{constructor(t,s){n(this,"el");n(this,"id");n(this,"options");n(this,"triggerEls");n(this,"closeButtonEl");n(this,"showClass");n(this,"isShow",!1);if(!t)throw new Error("Dialog element not found");this.el=t,this.options=s,this.id=t.id,this.triggerEls=Array.from(document.querySelectorAll(`[data-better-dialog-show="${this.id}"]`)),this.closeButtonEl=t.querySelector("[data-better-dialog-close]"),this.showClass=this.options.showClass||"is-show",this.bindEvents()}bindEvents(){var t;this.triggerEls.forEach(s=>s.addEventListener("click",()=>this.show())),(t=this.closeButtonEl)==null||t.addEventListener("click",()=>this.close()),this.el.addEventListener("cancel",s=>{s.preventDefault()}),this.el.addEventListener("click",s=>{const i=s.target.getBoundingClientRect(),o=s.clientX>=i.left&&s.clientX<=i.right,l=s.clientY>=i.top&&s.clientY<=i.bottom;o&&l||this.close()}),window.addEventListener("keydown",s=>{s.key==="Escape"&&this.close()})}show(){var t,s,i,o;this.isShow=!0,this.el.classList.add(this.showClass),this.el.showModal(),(s=(t=this.options.on)==null?void 0:t.show)==null||s.call(t,this),this.options.animation&&((o=(i=this.options).animation)==null||o.call(i,"show",this))}close(){var t,s;this.isShow=!1,this.el.classList.remove(this.showClass),this.options.animation?this.options.animation("close",this).then(()=>{var i,o;this.el.close(),(o=(i=this.options.on)==null?void 0:i.close)==null||o.call(i,this)}):(this.el.close(),(s=(t=this.options.on)==null?void 0:t.close)==null||s.call(t,this))}}class d{constructor(t,s){n(this,"els",[]);n(this,"dialogItems",[]);this.els=this.normalizeTarget(t),this.dialogItems=this.els.map(i=>new a(i,s))}normalizeTarget(t){return typeof t=="string"?Array.from(document.querySelectorAll(t)):t instanceof HTMLDialogElement?[t]:Array.isArray(t)?t.filter(s=>s instanceof HTMLDialogElement):t instanceof NodeList?Array.from(t).filter(s=>s instanceof HTMLDialogElement):[]}getDialogItemById(t){return this.dialogItems.find(s=>s.id===t)}}function m({duration:e=300}={}){return async(t,s)=>{const i=t==="show"?[{opacity:0},{opacity:1}]:[{opacity:1},{opacity:0}],o={duration:e},l=s.el.animate(i,o),r=s.el.animate(i,{...o,pseudoElement:"::backdrop"});return Promise.all([l.finished,r.finished]).then(()=>{})}}function u({duration:e=300,showClass:t="is-transition-show",closeClass:s="is-transition-close"}={}){return(i,o)=>new Promise(l=>{const r=i==="show"?t:s;o.el.classList.add(r),setTimeout(()=>{o.el.classList.remove(r),l()},e)})}function f(e){return e}exports.BetterDialog=d;exports.DialogItem=a;exports.css=u;exports.custom=f;exports.fade=m;
